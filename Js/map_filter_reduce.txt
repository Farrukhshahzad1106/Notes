map()
- map method of array is used to transform the array

Syntax:
    const arr = [5,1,3,2,6];
    function double (x) {
        return x * 2;
    }
     function triple (x) {
        return x * 3;
    }
    function toBinary(x) {
        retirn x.toString(2)
    }
    const output1= arr.map(function double(x) {
        return x * 2;
    })
    const output2 = arr.map(elem => elem * 2);
    const outputDouble = arr.map(double);
    const outputTriple = arr.map(triple);
    const outputBInary = arr.map(toBinary);
    console.log(outputDouble);
    console.log(outputTriple);
    console.log(outputBInary);


filter 
- used to filter out data from an array based on the provided logic(callback function)

const arr = [5,1,3,2,6];
function isOdd = (x) => {
    return x %  2;
}
function isEven = (x) => {
    return x % 2 === 0;
}
function greaterThanFour = (x) => {
    return x > 0;
}

const outputOdd = arr.filter(isOdd);
console.log(outputOdd);
const outputEven = arr.filter(isEven);
console.log(outputEven);
const outputGreaterThanFour = arr.filter(greaterThanFour);
console.log(outputGreaterThanFour);


reduce
- reduce method is used in place where we iterate over all the elements of the array and have to come up with a single value.

Syntax: 

const arr = [5,1,2,3,6];
function findSum (arr) {
    let sum = 0;
    for (i=0; i<arr.length; i++) {
        sum += arr[i];
    }
    return sum;
}
console.log(sum(arr)); // 17

// The callback funciton iterates over each element of the array.
// The first aprameter is a callback function that takes 2 parameters as below 
    // curr (second parameter) (analogous to arr[i] in the previous example) represent the current element of the array in each iteration.
    // acc(first parameter) (analogous to sum variable in the previous example) or accumulator is the variable used to accumulate the single value coing out of each iterationamd it sums up for the entire length of the array.
// The second parameter to reduce method eill be the initial value of the accumulator(the first parameter to th callback funciton of reduce)

const output = arr.reduce(function(acc, curr) {
    acc += curr
}, 0)
console.log(output); // 17

function findMax (arr) {
    let max = 0;
    for (i=0; i<arr.length; i++) {
        if (arr[i] > max) {
            sum = arr[i];
        }
    }
    return max;
}
console.log(findMax(arr)); // 6

const output = arr.reduce((acc, curr) => {
    if (curr > acc) {
        acc = curr;
    }
}, 0);
console.log(output);