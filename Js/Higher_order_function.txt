A function which takes another function as an argument or returns another another function is called a higher order function.

The function that is passed on to the higher order function is called the callback funciton.

function x() {
    console.log('Namaste');
}

function y(x) {
    x();
}

const radius = [4,2,6,1];

const area = function (radius) {
    return Math.PI * radius * radius;
}
const diameter = function (radius) {
    return 2 * radius;
}
const circumference = function (radius) {
    return 2 * Math.PI * radius;
}

Array.prototype.calculate = function (logic) {
    const output = [];
    for(let i=0; i<this.length; i++) {
        output.push(logic(this[i]));
    }
    return output;
}

funciton calculate (arr, logic) {
    const output = [];
    for(let i=0, i<arr.length; i++){
        output.push(logic(arr[i]));
    }
    return output;
}

console.log(calculate(radius, area))

console.log(radius.calculate(area));
console.log(radius.calculate(diameter));
console.log(radius.calculate(circumference));